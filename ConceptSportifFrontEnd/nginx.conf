# events {}

# http {
#     include /etc/nginx/mime.types;
#     default_type application/octet-stream;

#     server {
#         listen 80;
#         server_name dalidev.ddns.net;

#         # Redirect HTTP to HTTPS
#         location / {
#             return 301 https://$host$request_uri;
#         }
#     }

#     server {
#         listen 443 ssl;
#         server_name dalidev.ddns.net;

        
#     ssl_certificate /etc/ssl/certs/fullchain.pem;
#     ssl_certificate_key /etc/ssl/private/privkey.pem;
    
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers on;
#     ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

#         # Serve the Angular app
#         location / {
#             root /usr/share/nginx/html;
#             index index.html;
#             try_files $uri $uri/ /index.html;  # Single location for main app routes
#         }

#         # Handle JavaScript, CSS, and static files
#         location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|ttf|woff|woff2)$ {
#             root /usr/share/nginx/html;
#             expires 1y;
#             add_header Cache-Control "public";
#         }
#     }
# }
#####################################################
events {}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    server {
        listen 80;
        server_name dalidev.ddns.net;

        # Redirect HTTP to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    server {
        listen 443 ssl;
        server_name dalidev.ddns.net;

        ssl_certificate /etc/ssl/certs/fullchain.pem;
        ssl_certificate_key /etc/ssl/private/privkey.pem;
        
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';

        # Serve the Angular app
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;  # Single location for main app routes
        }

        # Handle JavaScript, CSS, and static files
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|ttf|woff|woff2)$ {
            root /usr/share/nginx/html;
            expires 1y;
            add_header Cache-Control "public";
        }

        #Proxy requests to the backend service
    #     location /api {  # Assuming your API is under the /api path
    #         proxy_pass http://backend:8082;  # Use the service name defined in Docker Compose
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }
     }
}
